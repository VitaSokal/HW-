GIT Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON. 
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone 
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add new.json
 8. Закоммитить файл. - git commit -m "the first json file"
 9. Отправить файл на внешний GitHub репозиторий. - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. -
- vim new.json
{
"name":"Vitalina",
"surname":"Yanchenko-Sokol",
"age":25,
"pets":0,
"salary":2000
}

 11. Отправить изменения на внешний репозиторий. - git commit -a -m "new lines"   -git push
 12. Создать файл preferences.json - touch preferences.json 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
- vim preferences.json 
{
"film":"What do men talk about",
"series":"Friends",
"food":"seafood",
"season":"summer",
"country":"Cuba"
}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch skills.json
vim skills.json 
{
"skills":["gitbash, postman, charles, fiddler, detools, XCode, Android Studio, SQL, Jmeter"]
}
 15. Отправить сразу 2 файла на внешний репозиторий. - git add preferences.json skills.json 
- git commit -m "new json files"
- git push
 16. На веб интерфейсе создать файл bug_report.json. - add file - create new file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. 
{ 
 "Summary":"The button Sign In is displaced after clicking on the page",
  "Author":"Vita",
  "Project":"App",
  "Component":"login page",
  "Version":2.0,
  "Severity":"Minor",
  "Priority":"Low"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull


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

XML
 21. Создать внешний репозиторий c названием XML. 
 22. Клонировать репозиторий XML на локальный компьютер. - git clone 
 23. Внутри локального XML создать файл “new.xml”. - touch new.xml
 24. Добавить файл под гит. - git add new.xml
 25. Закоммитить файл. - git commit -m "new xml file"
 26. Отправить файл на внешний GitHub репозиторий. - git push 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. 
vim new.xml
<personal_information>
<name>Vita</name>
<surname>Yanchenko-Sokol</surname>
<age>24</age>
<pets>0</pets>
<salary>2000</salary>
</personal_information>
 28. Отправить изменения на внешний репозиторий. git commit -a -m "new information" - git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. 
vim preferences.xml
<preferences>
<film>What do men talk about</film>
<series>Friends</series>
<food>seafood</food>
<season>summer</season>
<country>Cuba</country>
</preferences>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - touch skills.xml
vim skills.xml
<skills>
gitbash
postman
charles
fiddler
devtools
XCode
Android Studio
SQL
Jmeter
</skills>
 32. Сделать коммит в одну строку. - git add preferences.xml skills.xml; git commit -a -m "new xml files"
 33. Отправить сразу 2 файла на внешний репозиторий. - git push
 34. На веб интерфейсе создать файл bug_report.xml. - add file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<bug_report>
<Author>Vita</Author>
<Project>App</Project>
<Component>login page</Component>
<Version>2.0</Version>
<Severity>Minor</Severity>
<Priority>Low</Priority>
</bug_report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML -git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер. - git clone 
 3. Внутри локального TXT создать файл “new.txt”. - touch new.txt
 4. Добавить файл под гит. - git add new.txt
 5. Закоммитить файл. - git commit -m "new txt file"
 6. Отправить файл на внешний GitHub репозиторий. - git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - vim new.txt
 8. Отправить изменения на внешний репозиторий. - git commit -a -m "personal information" - git push
 9. Создать файл preferences.txt - touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - vim preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch skills.txt - vim skills.txt
 12. Сделать коммит в одну строку. - git add preferences.txt skills.txt; git commit -a -m "new txt files"
 13. Отправить сразу 2 файла на внешний репозиторий. - git push
 14. На веб интерфейсе создать файл bug_report.txt. 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT - git pull
